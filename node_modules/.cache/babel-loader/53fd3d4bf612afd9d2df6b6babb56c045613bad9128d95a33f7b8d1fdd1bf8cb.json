{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shikh\\\\PROJECT-1\\\\flight-status-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { fetchFlightStatus, updateFlightStatus, sendNotification } from './Services/api';\nimport { requestFCMToken, listenForMessages } from './Services/firebase';\n//import axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [flights, setFlights] = useState([]);\n  useEffect(() => {\n    const getToken = async () => {\n      const token = await requestFCMToken();\n      if (token) {\n        console.log(\"FCM Token:\", token);\n      }\n    };\n    getToken();\n    listenForMessages(payload => {\n      console.log(\"Message received: \", payload);\n    });\n    const fetchData = async () => {\n      const flightData = await fetchFlightStatus();\n      setFlights(flightData);\n    };\n    fetchData();\n  }, []);\n  const handleStatusUpdate = async (flightId, newStatus) => {\n    // Update flight status in the database\n    await updateFlightStatus(flightId, newStatus);\n\n    // Get the FCM token\n    const token = await requestFCMToken();\n\n    // Send notification\n    await sendNotification(token, flightId, newStatus);\n\n    // Optionally, fetch updated flight status data\n    const updatedFlights = await fetchFlightStatus();\n    setFlights(updatedFlights);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Flight Status App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: flights.map(flight => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [flight.FlightNumber, \" - \", flight.Status, \" - Gate: \", flight.Gate, /*#__PURE__*/_jsxDEV(\"span\", {\n          children: flight.Status === 'On-Time' ? /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleStatusUpdate(flight.FlightID, 'Delayed'),\n            children: \"Update to Delayed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleStatusUpdate(flight.FlightID, 'On-Time'),\n            children: \"Update to On Time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 74\n        }, this)]\n      }, flight.flightId, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"YkaBEB7rvMCgao95TwXfNB7bv6I=\");\n_c = App;\n;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","fetchFlightStatus","updateFlightStatus","sendNotification","requestFCMToken","listenForMessages","jsxDEV","_jsxDEV","App","_s","flights","setFlights","getToken","token","console","log","payload","fetchData","flightData","handleStatusUpdate","flightId","newStatus","updatedFlights","children","fileName","_jsxFileName","lineNumber","columnNumber","map","flight","FlightNumber","Status","Gate","onClick","FlightID","_c","$RefreshReg$"],"sources":["C:/Users/shikh/PROJECT-1/flight-status-app/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { fetchFlightStatus, updateFlightStatus, sendNotification } from './Services/api';\nimport { requestFCMToken, listenForMessages } from './Services/firebase';\n//import axios from 'axios';\nfunction App() {\n    const [flights, setFlights] = useState([]);\n    useEffect(() => {\n        const getToken = async () => {\n            const token = await requestFCMToken();\n            if (token) {\n                console.log(\"FCM Token:\", token);\n            }\n        };\n\n        getToken();\n        listenForMessages((payload) => {\n            console.log(\"Message received: \", payload);\n        });\n\n        const fetchData = async () => {\n            const flightData = await fetchFlightStatus();\n            setFlights(flightData);\n        };\n\n        fetchData();\n    }, []);\n\n    \n\n    const handleStatusUpdate = async (flightId, newStatus) => {\n        // Update flight status in the database\n        await updateFlightStatus(flightId, newStatus);\n    \n        // Get the FCM token\n        const token = await requestFCMToken();\n        \n        // Send notification\n        await sendNotification(token, flightId, newStatus);\n        \n        // Optionally, fetch updated flight status data\n        const updatedFlights = await fetchFlightStatus();\n        setFlights(updatedFlights);\n    };\n    \n    \n\n    return (\n        <div>\n            <h1>Flight Status App</h1>\n            <ul>\n    {flights.map((flight) => (\n        <li key={flight.flightId}>\n            {flight.FlightNumber} - {flight.Status} - Gate: {flight.Gate}<span>\n            {flight.Status === 'On-Time' ? (\n                <button onClick={() => handleStatusUpdate(flight.FlightID, 'Delayed')}>\n                    Update to Delayed\n                </button>\n            ) : (\n                <button onClick={() => handleStatusUpdate(flight.FlightID, 'On-Time')}>\n                    Update to On Time\n                </button>\n            )}\n            </span>\n        </li>\n    ))}\n</ul>\n\n        </div>\n    );\n};\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}